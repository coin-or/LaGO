
Short installation instructions for LaGO

**** Requirements:
LaGO depends on several third party packages, from whom some are optional.
The ThirdParty directory contains some scripts to download and compile some of these packages.

1. The Template Numerical Toolkit (TNT) from NIST
http://math.nist.gov/tnt
Use the script get.TNT in ThirdParty/TNT.

2. RANLIB.C - Random Number Generation
http://www.netlib.org/random/ranlib.c.tar.gz
Use the script get.ranlib in ThirdParty/ranlib.

3. METIS - Serial Graph Partitioning and Fill-reducing Matrix Ordering
http://glaros.dtc.umn.edu/gkhome/metis/metis/overview
Use the script get.METIS in ThirdParty/METIS.

4. AMPL interface (ASL) or GAMS interface
If you want to interface LaGO by AMPL, then start the script get.ASL in ThirdParty/ASL.
It downloads and compiles the AMPL Solver Library from http://www.netlib.org/ampl/.

If you want to interface LaGO by GAMS, then start the script get.GAMS_IO in ThirdParty/GAMS_IO.
It downloads and unpacks the GAMS I/O libraries.
You will further need to have a GAMS system installed in your system.

6. optional: Interval arithmetic library FILIB++
Use the script get.FILIB++ in ThirdParty/FILIB++.
The presence of FILIB++ enables some interval arithmetic based features in LaGO, like a boxreduction method.
But note that these function require that the (nonquadratic) functions of the model can be evaluated over a box.
This feature is not available with the AMPL interface, so that LaGO with FILIB++ will only work when you use the GAMS interface, or when you solve MIQQPs only.

7. optional: CPLEX
You can buy it from ILOG.
Then you have to provide the linking flags via --with-cplex-lib and the path of cplex.h via --with-cplex-incdir to configure.
If CPLEX is not available for LaGO, COIN/Clp is used to solve LPs.


**** Compilation of LaGO:
After installation of the required third party packages, run the script configure in the main directory of your COIN/LaGO package.
This should configure all packages, including LaGO, and generate the required makefiles.
Then call make and make install. Now you should find a LaGO binary in the bin directory.
If possible, LaGO uses it's GAMS interface. If this is not available, the AMPL interface will be created.

**** Making LaGO known to GAMS:
In the ThirdParty/GAMS_IO directory you find the file gmsla_.zip.
Copy this file in the directory of your GAMS distribution. Then call the program gamsinst of your GAMS distribution.
This program will find the file gmsla_.zip and make GAMS known of LaGO.
Finally, you have to tell GAMS where to find LaGO. For doing so, adjust the variable LAGODIR in the file gmsla_ux.run in your GAMS distribution.

